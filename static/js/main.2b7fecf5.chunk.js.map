{"version":3,"sources":["utils/compareName.js","containers/movie.jsx","components/loader.jsx","containers/singleMovie.jsx","components/movieCard.jsx","components/movieCards.jsx","containers/App.js","reportWebVitals.js","index.js"],"names":["compareName","a","b","name","compareNameDescending","compareHeightAscending","Number","height","compareHeightDescending","sortGender","state","M","F","R","forEach","character","gender","push","Movie","data","characters","title","opening_crawl","director","producer","release_date","useState","heightSort","setHeightSort","nameSort","setNameSort","genderSort","setGenderSort","useReducer","action","type","sort","filter","maleFirst","femaleFirst","stateCharacter","dispatch","totalHeightInCentimeters","reduce","totalHeight","totalCharacterHeightInCentiMeter","totalCharacterHeightInFeet","value","feet","Math","floor","inches","toFixed","meterToFeet","nameSortHandler","className","Date","toDateString","motion","p","animate","opacity","initial","transition","duration","delay","div","x","stiffness","onClick","style","cursor","onDoubleClick","map","i","tr","fontSize","color","length","colSpan","Loading","SingleMovie","id","useParams","error","setError","loading","setLoading","movieData","setMovieData","url","axios","get","response","prom","el","Promise","all","then","characterResponse","extractedCharacterData","catch","ex","useEffect","fetchMovieData","toDisplay","Object","keys","h3","withRouter","movie","useHistory","slice","MovieCards","movies","App","setMovies","results","transformedMovies","fetchData","path","exact","y","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2b7fecf5.chunk.js","sourcesContent":["import { GiMale, GiFemale } from 'react-icons/gi';\r\nimport { FaGenderless } from 'react-icons/fa';\r\n\r\n// function for comparing and sorting array of objects that has name property in [ASC] order\r\nexport  function compareName (a, b) {\r\n    if (a.name < b.name) {\r\n        return -1;\r\n    }\r\n\r\n    if (a.name > b.name) {\r\n        return +1;\r\n    }\r\n    return 0;\r\n}\r\n\r\n// function for comparing and sorting array of objects that has name property in [DESC] order\r\nexport function compareNameDescending (a, b) {\r\n    if (a.name > b.name) {\r\n        return -1;\r\n    }\r\n\r\n    if (a.name < b.name) {\r\n        return +1;\r\n    }\r\n    return 0; \r\n}\r\n\r\n// function for comparing and sorting array of objects that has height property in [ASC] order\r\nexport function compareHeightAscending (a, b) {\r\n    if (Number(a.height) < Number(b.height)) {\r\n        return -1;\r\n    }\r\n\r\n    if (Number(a.height) > Number(b.height)) {\r\n        return +1;\r\n    }\r\n    return 0;\r\n}\r\n\r\n// function for comparing and sorting array of objects that has name property in [DESC] order\r\nexport function compareHeightDescending (a, b) {\r\n    if (Number(a.height) > Number(b.height)) {\r\n        return -1;\r\n    }\r\n\r\n    if (Number(a.height) < Number(b.height)) {\r\n        return +1;\r\n    }\r\n    return 0;\r\n}\r\n\r\n// function for getting the appropraite icon to display for each gender\r\nexport function icon(value) {\r\n    let genderIcon;\r\n\r\n    if (value === 'male') {\r\n        genderIcon = <GiMale fontSize='20px' color='rgba(55, 55, 247, 0.734)'/>\r\n    } else if (value === 'female') {   \r\n        genderIcon = <GiFemale fontSize='20px' color='rgb(247, 78, 78)'/>\r\n    } else if (value === 'hermaphrodite') {\r\n        genderIcon = (\r\n            <div>\r\n                <GiMale fontSize='20px' color='rgba(55, 55, 247, 0.734)'/>\r\n                <GiFemale fontSize='20px' color='rgb(247, 78, 78)'/>\r\n            </div>\r\n        )\r\n    } else {\r\n        genderIcon = <FaGenderless fontSize='20px'/>\r\n    }\r\n\r\n    return genderIcon;\r\n}\r\n\r\n// function for sorting characters based on their gender\r\nexport function sortGender (state) {\r\n    const M = [];\r\n    const F = [];\r\n    const R = [];\r\n\r\n    state.forEach((character) => {\r\n        if (character.gender === 'male') {\r\n            M.push(character);\r\n        } else if (character.gender === 'female') {\r\n            F.push(character);\r\n        } else {\r\n            R.push(character);\r\n        }\r\n    });\r\n\r\n    return { F, M, R };\r\n}\r\n\r\n// function for converting heights\r\nexport function meterToFeet (value) {\r\n    // get the amount of feet in the height value\r\n    const feet = Math.floor(value * 0.03);\r\n    // convert the [feet] to (cm) to get the remaining...\r\n    // ... that was filtered by { Math.floor }\r\n    const feetToMeter = (1 / 0.03) * feet;\r\n    const remainder = value - feetToMeter;\r\n    // convert remainder to (in)\r\n    const inches = remainder * 0.39;\r\n\r\n    // value in ft/in\r\n    return `(${ feet }ft/${ inches.toFixed(2) }in)`;\r\n}\r\n\r\n// function for getting the total height of the characters\r\nexport function totalCharacterHeightInCentiMeter (stateCharacter) { \r\n    const heightSum = stateCharacter.reduce(\r\n        (totalHeight, character) => {\r\n            // get height for each character\r\n            let { height } = character;\r\n\r\n            // height gives a falsy value [unknown, other string that cant resolve to number]\r\n            if (!Number(height)) {\r\n                height = 0;\r\n            }\r\n            \r\n            return totalHeight + Number(height);\r\n    }, 0);\r\n\r\n    return heightSum;\r\n}\r\n\r\n// function for animating the opening_crawl;\r\nexport function textAnimator (text) {\r\n    // let output = '';\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        setTimeout(() => {\r\n            let output = '';\r\n            output += `${ text[i] }`;\r\n\r\n            return output\r\n        }, 100 * i)\r\n    }\r\n}","import { useReducer, useState, useRef } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { FloatingLettersTextBuilder } from 'react-animated-text-builders';\r\n\r\nimport { \r\n    compareHeightDescending, compareHeightAscending, \r\n    compareNameDescending, compareName, icon, textAnimator,\r\n    sortGender, meterToFeet, totalCharacterHeightInCentiMeter\r\n} from '../utils/compareName';\r\n\r\nfunction Movie ({ data }) {\r\n    // extracting the needed information from the [data] props\r\n    const { \r\n        characters, title, opening_crawl,\r\n        director, producer, release_date\r\n    } = data;\r\n\r\n    // const pRef = useRef('');\r\n\r\n    // textAnimator(opening_crawl, pRef)\r\n\r\n    // state for knowing if the sorting should be ascending/descending....\r\n    // ... and in the case of gender, [male, female]\r\n    const [ heightSort, setHeightSort ] = useState('ASCENDING');\r\n    const [ nameSort, setNameSort ] = useState('ASCENDING');\r\n    const [ genderSort, setGenderSort ] = useState('MALE');\r\n\r\n    const reducer = (state, action) => {\r\n        switch (action.type) {\r\n            case \"SORT_NAME_ASCENDING\":\r\n                const toBeSortedAscending = [ ...state ];\r\n                const sorted = toBeSortedAscending.sort(compareName);\r\n                return sorted;\r\n            case \"SORT_NAME_DESCENDING\":\r\n                const toBeSortedDescending = [ ...state ];\r\n                const sortedCharactersDescending = toBeSortedDescending.sort(compareNameDescending);\r\n                return sortedCharactersDescending;\r\n            case \"HEIGHT_SORT_ASCENDING\":\r\n                const toBeSortedHeight = [ ...state ];\r\n                const sortedWithHeightAscending = toBeSortedHeight.sort(compareHeightAscending);\r\n                return sortedWithHeightAscending;\r\n            case \"HEIGHT_SORT_DESCENDING\":\r\n                const toBeSortedHeightDes = [ ...state ];\r\n                const sortedWithHeightDescending = toBeSortedHeightDes.sort(compareHeightDescending);\r\n                return sortedWithHeightDescending;\r\n            case \"FEMALE_FILTER\":\r\n                const femaleCharacters = characters.filter(character => character.gender === 'female')\r\n                return femaleCharacters;\r\n            case \"MALE_FILTER\":\r\n                const maleCharacters = characters.filter(character => character.gender === 'male');\r\n                return maleCharacters;\r\n            case \"OTHERS_FILTER\":\r\n                const otherCharacters = characters.filter(character => {\r\n                    return character.gender !== 'male' && character.gender !== 'female'\r\n                });\r\n                return otherCharacters;\r\n            case \"SHOW_ALL\":\r\n                return [ ...characters ];\r\n            case \"SORT_MALE_FIRST\":\r\n                let maleFirst = sortGender(state);\r\n                return [ ...maleFirst.M, ...maleFirst.F, ...maleFirst.R ];\r\n            case \"SORT_FEMALE_FIRST\":\r\n                let femaleFirst = sortGender(state);\r\n                return [ ...femaleFirst.F, ...femaleFirst.M, ...femaleFirst.R ];\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    const [ stateCharacter, dispatch ] = useReducer(reducer, characters);\r\n\r\n    // getting the height in (ft/in) by invoking function [meterToFeet]\r\n    const totalHeightInCentimeters = totalCharacterHeightInCentiMeter(stateCharacter);\r\n    const totalCharacterHeightInFeet = meterToFeet(totalHeightInCentimeters);\r\n\r\n    // handler for sorting the height of characters in [ASC, DESC] order\r\n    const heightSortHandler = () => {\r\n        if (heightSort === 'ASCENDING') {\r\n            dispatch({ type: 'HEIGHT_SORT_ASCENDING' });\r\n            setHeightSort('DESCENDING');\r\n        } else {\r\n            dispatch({ type: 'HEIGHT_SORT_DESCENDING' });\r\n            setHeightSort('ASCENDING');\r\n        }\r\n    }\r\n\r\n    // handler for sorting name name of characters in [ASC, DESC] order\r\n    const nameSortHandler = () => {\r\n        if (nameSort === 'ASCENDING') {\r\n            dispatch({ type: 'SORT_NAME_ASCENDING'});\r\n            setNameSort('DESCENDING');\r\n        } else {\r\n            dispatch({ type: 'SORT_NAME_DESCENDING'});\r\n            setNameSort('ASCENDING');\r\n        }\r\n    }\r\n\r\n    // handler for sorting by gender of characters\r\n    const genderSortHandler = () => {\r\n        if (genderSort === 'MALE') {\r\n            dispatch({ type: 'SORT_MALE_FIRST' });\r\n            setGenderSort('FEMALE');\r\n        } else {\r\n            dispatch({ type: 'SORT_FEMALE_FIRST' });\r\n            setGenderSort('MALE')\r\n        }\r\n    }\r\n\r\n    // handler for filtering out male character\r\n    const femaleFilterHandler = () => {\r\n        dispatch({ type: \"FEMALE_FILTER\" })\r\n    }\r\n\r\n    // handler for filtering out female character\r\n    const maleFilterHandler = () => {\r\n        dispatch({ type: \"MALE_FILTER\" })\r\n    }\r\n\r\n    // handler for showing all the characters\r\n    const showAllHandler = () => {\r\n        dispatch({ type: \"SHOW_ALL\" })\r\n    }\r\n\r\n    // handler for viewing characters that are [agender, hermaphrodite]\r\n    const otherGenderHandler = () => {\r\n        dispatch({ type: \"OTHERS_FILTER\" })\r\n    }\r\n\r\n    return (\r\n        <div className='movie'>\r\n            {/* movie information */}\r\n            <div className=\"info\">\r\n                <h3>{ title }</h3>\r\n                <h4>released in { (new Date(release_date)).toDateString() }</h4>\r\n                <h4>produced by { producer }</h4>\r\n                <h4>directed by { director }</h4>\r\n                <motion.p\r\n                    animate={{ opacity: 1 }}\r\n                    initial={{ opacity: 0 }}\r\n                    transition={{ type: 'tween', duration: 3, delay: 1 }}\r\n                >\r\n                    { opening_crawl }\r\n                </motion.p>\r\n            </div>\r\n\r\n            <div className=\"button\">\r\n                <h2>show</h2>\r\n                <motion.div\r\n                    animate={{ x: 0 }}\r\n                    initial={{ x: '200vw' }}\r\n                    transition={{ type: 'spring', stiffness: 120 }}\r\n                >\r\n                    <button\r\n                        onClick={ maleFilterHandler }\r\n                    >Male</button>\r\n                    <button\r\n                        onClick={ femaleFilterHandler }\r\n                    >Female</button>\r\n                </motion.div>\r\n\r\n                <motion.div\r\n                    animate={{ x: 0 }}\r\n                    initial={{ x: '-200vw' }}\r\n                    transition={{ type: 'spring', stiffness: 120 }}\r\n                >\r\n                    <button\r\n                        onClick={ otherGenderHandler }\r\n                    >Others</button>\r\n                    <button\r\n                        onClick={ showAllHandler }\r\n                    >All </button>\r\n                </motion.div>\r\n            </div>\r\n\r\n            {/* table of characters in the movie */}\r\n            <table>\r\n                <thead\r\n                    onClick={ nameSortHandler }\r\n                    style={{ cursor: 'pointer' }}\r\n                >\r\n                    <tr>\r\n                        <th onDoubleClick={ nameSortHandler }>Name</th>\r\n                        <th onDoubleClick={ genderSortHandler }>Gender</th>\r\n                        <th onDoubleClick={ heightSortHandler }>Height(cm)</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {\r\n                        // looping through the array of characters and...\r\n                        // ...generating the characters row of data\r\n                        stateCharacter.map((character, i) => {\r\n                            // extracting the data to be displayed\r\n                            const { name, gender, height } = character;\r\n\r\n                            return (\r\n                                <motion.tr \r\n                                    key={ name }\r\n                                    animate={{ opacity: 1 }}\r\n                                    initial={{ opacity: 0 }}\r\n                                    transition={{ type: 'tween', delay: (i + 1) * 0.15 }}\r\n                                >\r\n                                    <td>{ name }</td>\r\n                                    <td>{ icon(gender) }</td>\r\n                                    <td>{  height }</td>\r\n                                </motion.tr>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                    <motion.tr\r\n                        animate={{ opacity: 1 }}\r\n                        initial={{ opacity: 0 }}\r\n                        transition={{ type: 'tween', delay: (stateCharacter.length + 1) * 0.15 }}\r\n                    >\r\n                        <td>{ stateCharacter.length } characters</td>\r\n                        <td colSpan='2'>{ `${ totalHeightInCentimeters }cm ${ totalCharacterHeightInFeet }` }</td>\r\n                    </motion.tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Movie;","\r\n\r\nfunction Loading () {\r\n    return (\r\n        <div\r\n            className='loading'\r\n        >Loading...</div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { FaHeart } from 'react-icons/fa';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport Movie from './movie';\r\nimport Loading from '../components/loader';\r\n\r\nfunction SingleMovie () {\r\n    // extracting the id param\r\n    const { id } = useParams();\r\n\r\n    // state of the components\r\n    const [ error, setError ] = useState(false);\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [ movieData, setMovieData ] = useState({});\r\n\r\n    // function to fetch the movie and the characters of the movie\r\n    async function fetchMovieData (url) {\r\n        // the fetching starts\r\n        setLoading(true);\r\n\r\n        try {\r\n            // fetches the movie details\r\n            const response = await axios.get(url);\r\n\r\n            // extract needed data from the body of response\r\n            const { \r\n                characters, title, opening_crawl,\r\n                director, producer, release_date\r\n            } = response.data;\r\n\r\n            // transform the array of characters url into an array of promises\r\n            const prom = characters.map(el => {\r\n                return axios.get(el);\r\n            });\r\n\r\n            // fetch the data for all the user\r\n            Promise.all(prom)\r\n                .then(response => {\r\n                    // success in fetching the characters data\r\n                    const data = [];\r\n\r\n                    // tranform the body of the response and extract the needed data\r\n                    response.forEach((characterResponse) => {\r\n                        const { name, gender, height } = characterResponse.data;\r\n                        const extractedCharacterData = { name, gender, height };\r\n\r\n                        data.push(extractedCharacterData)\r\n                    })\r\n\r\n                    // setting all the extracted data(movie, characters)\r\n                    const extractedData = { \r\n                        title, director,\r\n                        producer, release_date,\r\n                        opening_crawl, characters: data \r\n                    };\r\n\r\n                    // setting the state of the movie, loading and error\r\n                    setMovieData(extractedData);\r\n                    setLoading(false);\r\n                    setError(false);\r\n                })\r\n                .catch( (ex) => {\r\n                    // error occurred wile fetching the data of users state is set to an error case\r\n                    setLoading(false);\r\n                    setError(true);\r\n                });\r\n        } catch (ex) {\r\n            // error in fetching the movie && state is set for failure in fetching\r\n            setLoading(false);\r\n            setError(true);\r\n        }\r\n    }\r\n\r\n    // fetch the data when the component mounts\r\n    useEffect(() => {\r\n        fetchMovieData(`https://swapi.dev/api/films/${ id }`);\r\n    }, []);\r\n\r\n    let toDisplay = null;\r\n\r\n    // seeting what should be displayed for every stage of the fetching procedure\r\n    if (loading) {\r\n        // the fetching is ongoing\r\n        toDisplay = <Loading />\r\n    } else if (!loading && error) {\r\n        // the fetch of data failed\r\n        toDisplay = <p className=\"error\">something went wrong</p>\r\n    } else if (!loading && !error && Object.keys(movieData).length > 0) {\r\n        // data has been fetched\r\n        toDisplay = (\r\n            <div>\r\n                <Movie data={ movieData }/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <motion.h3\r\n                animate={{ x: 0 }}\r\n                initial={{ x: '-300vw' }}\r\n                transition={{ type: 'spring', stiffness: 120 }}\r\n            >STAR WARS</motion.h3>\r\n            { toDisplay }\r\n            <motion.div \r\n                className='footer'\r\n                animate={{ x: 0 }}\r\n                initial={{ x: '300vh' }}\r\n                transition={{ type: 'spring', stiffness: 120, delay: 2 }}\r\n            >\r\n                Made with love <FaHeart color='red' fontSize='20px'/> by Tomiwa\r\n            </motion.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleMovie;","import { withRouter, useHistory } from 'react-router-dom';\r\n\r\nfunction MovieCard ({ movie }) {\r\n    const { push } = useHistory();\r\n    const { url, title, producer, release_date, director } = movie;\r\n\r\n    // extracting the number/id if the movie by slicing out the last two...\r\n    // ...word and the last word since the id appears to be at nth(-2) index of the url;\r\n    const id = url.slice(-2, url.length-1)\r\n\r\n    // click function for the card\r\n    const movieClickHandler = () => {\r\n        push(`/movie/${ id }`)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"movieCard\"\r\n            onClick={ movieClickHandler }\r\n        >\r\n            <h3>{ title }</h3>\r\n            <h4 className=\"producer\" >producer by { producer }</h4>\r\n            <h4>director by { director }</h4>\r\n            <p>released in { release_date }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(MovieCard);","// import { FaHeart } from 'react-icons/fa';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport MovieCard from './movieCard';\r\n\r\nfunction MovieCards ({ movies }) {\r\n    return (\r\n        <div\r\n            className=\"movieCards\"\r\n        >\r\n            <h4>List of available movies</h4>\r\n            {\r\n                movies.map((movie, i) => {\r\n                    return (\r\n                        <motion.div key={ movie.title }\r\n                            animate={{ x: 0 }}\r\n                            initial={{ x: i % 2 === 0 ?'100vw' : '-100vw' }}\r\n                            transition={{ type: 'spring', stiffness: 120 , delay: i + 1 }}\r\n                        >\r\n                            <MovieCard \r\n                                movie={ movie }\r\n                            />\r\n                        </motion.div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieCards;","import axios from 'axios';\nimport { motion } from 'framer-motion';\nimport { FaHeart } from 'react-icons/fa';\nimport { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport '../App.css';\nimport SingleMovie from './singleMovie';\nimport MovieCards from '../components/movieCards';\nimport Loading from '../components/loader';\n\n\nfunction App() {\n  const [ error, setError ] = useState(false);\n  const [ loading, setLoading ] = useState(false);\n  const [ movies, setMovies ] = useState([]);\n\n  async function fetchData () {\n    const url = 'https://swapi.dev/api/films';\n    setLoading(true);\n\n    try {\n      // fetching the data and extracting the body of the response\n      const response = await axios.get(url);\n      const { results } = response.data;\n\n      // transforming logic for the movies gotten from the [url];\n      const transformedMovies = results.map((movie) => {\n        const transformedMovie = {\n          title: movie.title,\n          release_date: movie.release_date,\n          producer: movie.producer,\n          url: movie.url,\n          director: movie.director\n        }\n\n        return transformedMovie;\n      });\n\n      // setting the componenets states for sucessful fetch data\n      setMovies(transformedMovies);\n      setLoading(false);\n      setError(false);\n    } catch (ex) {\n      // setting the componenets states for failure to fetch data\n      setLoading(false);\n      setError(true);\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, []);\n\n  let toDisplay = null;\n\n  if (loading) {\n    toDisplay = (\n      <div className='container'>\n        <Loading />\n      </div>\n    )\n  } else if (!loading && error) {\n    toDisplay = (\n      <div className='container'>\n        <p className='error'>something went wrong</p>\n      </div>\n    )\n  } else {\n    toDisplay = <MovieCards movies={ movies } />\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/' exact>\n          <div className='container'>\n            <motion.h3\n              className=\"button\"\n              animate={{ y: 0 }}\n              initial={{ y: '200vh' }}\n              transition={{ type: 'spring', stiffness: 120 }}\n            >STAR WARS</motion.h3>\n            { toDisplay }\n            <motion.div \n              className='footer'\n              animate={{ y: 0 }}\n              initial={{ y: '-200vh' }}\n              transition={{ type: 'spring', stiffness: 120, delay: 2 }}\n            >\n              Made with love <FaHeart color='red' fontSize='20px'/> by Tomiwa\n            </motion.div>\n          </div>\n        </Route>\n\n        <Route path='/movie/:id'>\n          <h4>List of available movies</h4>\n          <SingleMovie />\n        </Route>\n\n        <Redirect to='/' />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename='/metacare'>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}